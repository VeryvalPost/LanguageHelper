#application-docker.properties
server.address=0.0.0.0

# Database
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://db:5432/${POSTGRES_DB}?sslmode=disable}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate & Schema Initialization
spring.jpa.hibernate.ddl-auto=none
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema.sql
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# HikariCP Performance
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.leak-detection-threshold=60000

# Multipart file settings (важно для больших PDF)
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

# OCR оптимизации для Docker
ocr.max-pages=10
ocr.dpi=150
ocr.max-image-width=1600
ocr.max-image-height=1200

# JWT Configuration
jwt.secret=${JWT_SECRET:mySecretKey}
jwt.expiration=86400000

# Tesseract для Docker
tesseract.datapath=/usr/share/tessdata

# Logging
logging.level.com.miaai.language_helper.service.PdfOcrService=INFO
logging.level.org.apache.pdfbox=WARN
logging.level.org.springframework.jdbc.datasource.init=DEBUG
logging.level.org.springframework.boot.autoconfigure.jdbc=DEBUG

spring.management.endpoints.web.exposure.include=health,info
spring.management.endpoint.health.show-details=always
