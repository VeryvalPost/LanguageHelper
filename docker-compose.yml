#Docker-compose
version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_DB: language_helper
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d language_helper"]
      interval: 10s
      timeout: 10s
      retries: 15
      start_period: 30s

  app:
    build: .
    container_name: language-helper-app
    environment:
      SPRING_PROFILES_ACTIVE: docker
      API_KEY: ${API_KEY}
      JWT_SECRET: ${JWT_SECRET}
      SPRING_SECURITY_USER_PASSWORD: ${ADMIN_PASSWORD}
      TESSDATA_PREFIX: /usr/share/tessdata
    ports:
      - "8080:8080"
    volumes:
      - ./tessdata:/usr/share/tessdata:ro
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: on-failure

  frontend:
    build: ./frontend
    container_name: language-helper-frontend
    ports:
      - "80:80"
    environment:
      - VITE_API_URL=/api
    depends_on:
      app:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data: